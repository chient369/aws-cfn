AWSTemplateFormatVersion: 2010-09-09
Description: AWS CloudFormation Sample Template for creating a Multi-AZ DB cluster.
Parameters:
  DBUsername:
    NoEcho: 'true'
    Description: Username for database access
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: Must begin with a letter and contain only alphanumeric characters.
    Default: chientvAdmin
  DBPassword:
    NoEcho: 'true'
    Description: Password for database access
    Type: String
    MinLength: '8'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: Must contain only alphanumeric characters.
    Default: AdminDef

  DBClusterIdentifier:
    Type: String
    Default: lab7-db

  DBName:
    Type: String

  Engine:
    Type: String
    Default: aurora-mysql

  EngineVersion:
    Type: String
    Default: 8.0.mysql_aurora.3.01.1

  InstanceClass:
    Type: String
    Default: db.r5.large
    
  SubnetGroups:
    Type: List<AWS::EC2::Subnet::Id>
    Description: The list of Availability Zones to use for the subnets in the VPC.

  DBSecurityGroupIds:
    Type: List<AWS::EC2::SecurityGroup::Id>

Resources:
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: RDS DB of subnets group
      DBSubnetGroupName: DBSubnetGroup
      SubnetIds: 
        - !Select [0, !Ref SubnetGroups]
        - !Select [1, !Ref SubnetGroups]

  MySQLDBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceClass: !Ref InstanceClass
      DBClusterIdentifier: !Ref DBClusterIdentifier 
      Engine: aurora-mysql
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      EngineVersion: !Ref EngineVersion
      DBSubnetGroupName: !Ref DBSubnetGroup
      PubliclyAccessible: false
      MultiAZ: true
      VPCSecurityGroups: 
        - !Select [0, !Ref DBSecurityGroupIds]
        
Outputs:
    DBEndPoint:
        Value: !GetAtt MySQLDBInstance.Endpoint.Address
